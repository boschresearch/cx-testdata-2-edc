# generated by datamodel-codegen:
#   filename:  traceability-unique-id-push-cx-release-openapi-v1.0.0.yaml
#   timestamp: 2023-03-31T18:40:38+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union
from uuid import UUID

from pydantic import AnyUrl, Field, constr

from pycxids.models.base_model import MyBaseModel


class UniqueIdPushClassification(Enum):
    Child_Relationship = 'Child-Relationship'


class SerializedPartItem(MyBaseModel):
    manufacturerId: str = Field(
        ...,
        description='The Business Partner Number (BPNL) of the manufacturer of the serialized part, i.e., the companies main entry.',
        example='BPNL00000003BW3S',
    )
    manufacturerPartId: str = Field(
        ...,
        description='The ID of the type/catalog part (of which the serialized part is an instance of) from the manufacturer.',
        example='8840838-04',
    )
    customerPartId: Optional[str] = Field(
        None,
        description='The ID of the type/catalog part (of which the serialized part is an instance of) from the customer.',
        example='AAX178378',
    )
    partInstanceId: str = Field(
        ...,
        description="The serial number of the serialized part from the manufacturer. We assume here that the customer does not have or create its own serial number for a part, but just used the manufacturer's serial number.",
        example='NO-009284492099792129568369',
    )
    catenaxId: str = Field(
        ...,
        description='Catena-X ID for a serialized part.',
        example='urn:uuid:d32d3b55-d222-41e9-8d19-554af53124dd',
    )


class BatchItem(MyBaseModel):
    manufacturerId: str = Field(
        ...,
        description='The Business Partner Number (BPNL) of the manufacturer of the batch, i.e., the companies main entry.',
        example='BPNL00000003BW3S',
    )
    manufacturerPartId: str = Field(
        ...,
        description='The ID of the type/catalog part (of which the batch is an instance of) from the manufacturer.',
        example='8840838-04',
    )
    customerPartId: Optional[str] = Field(
        None,
        description='The ID of the type/catalog part (of which the batch is an instance of) from the customer.',
        example='AAX178378',
    )
    batchId: str = Field(
        ...,
        description="The serial number of the batch from the manufacturer. We assume here that the customer does not have or create its own serial number for a batch, but just used the manufacturer's serial number.",
        example='NO-009284492099792129568369',
    )
    catenaxId: str = Field(
        ...,
        description='Catena-X ID for a batch.',
        example='urn:uuid:d32d3b55-d222-41e9-8d19-554af53124dd',
    )


class UniqueIdPushNotificationReceiveRequestHeader(MyBaseModel):
    notificationId: UUID = Field(
        ...,
        description='A UUIDv4 to uniquely identify a Unique ID push notification.',
        example='a7954026-3aff-4b6c-92bf-04671ef2fa46',
    )
    senderBPN: str = Field(
        ...,
        description='The business partner number (BPN) of the sender.',
        example='BPNL00000003BW3S',
    )
    senderAddress: AnyUrl = Field(
        ...,
        description='The Eclipse Dataspace Connector (EDC) URL of the sender.',
        example='https://edc.company-xyz.io/BPNL00000003BW3S',
    )
    recipientBPN: str = Field(
        ...,
        description='The business partner number (BPN) of the receiver.',
        example='BPNL00000003BV4H',
    )
    classification: UniqueIdPushClassification


class UniqueIdPushNotificationReceivePayload(MyBaseModel):
    information: Optional[constr(max_length=1000)] = Field(
        None,
        example='Update of serialized parts and batches for which digital twins were created.',
    )
    listOfItems: List[Union[SerializedPartItem, BatchItem]]


class UniqueIdPushNotificationReceiveRequestBody(MyBaseModel):
    header: UniqueIdPushNotificationReceiveRequestHeader
    content: UniqueIdPushNotificationReceivePayload
